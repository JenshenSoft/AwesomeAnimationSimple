apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries
def test = rootProject.ext.testingLibraries

def siteUrl = 'https://github.com/JenshenSoft/AwesomeAnimationSimple'
def gitUrl = 'https://github.com/JenshenSoft/AwesomeAnimationSimple.git'
def libDesc = 'This library provides a simple class for building animation based on "Object animator"'

group = "ua.jenshensoft"
version = "1.0.4"

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion
    resourcePrefix "awesomeAnimation_"

    defaultConfig {
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

bintray {

    if (project.hasProperty("bintray_user")
            && project.hasProperty("bintray_apikey")) {
        user = project.getProperty("bintray_user")
        key = project.getProperty("bintray_apikey")
        println("Applied properties from --project-prop")
    } else {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('keys.properties').newDataInputStream())
        user = properties.getProperty("bintray_user")
        key = properties.getProperty("bintray_apikey")
        println("Applied properties from local inv")
    }

    configurations = ['archives']
    pkg {
        repo = group
        name = project.name
        desc = libDesc
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['aar', 'android', 'example']
        publish = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name "AwesomeAnimation library"
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'jenshen1992'
                        name 'Yevhen'
                        email 'samoilov.yevhen@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    //options.encoding = 'UTF-8'
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly "com.android.support:support-annotations:${libs.supportVersion}"

    //testing
    testImplementation "junit:junit:${test.junit}"
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
